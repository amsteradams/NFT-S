{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "deployNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "deploySft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyContractAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_i",
          "type": "uint256"
        }
      ],
      "name": "getAContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"deployNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"deploySft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"getAContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyContractAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0xe0978cd3a709662b5bee0659fdecfbd6bea894a08ebd744cb635f5a069a78e0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67540aaac524bae068979f68b0aab96f4eea88104ae011e1266e5c09c93c5cd9\",\"dweb:/ipfs/QmdC8pkUN6ymyKts95DqJjL2KsDwmiJuV2ZBLGqpYd6uzw\"]},\"project:/contracts/Nft.sol\":{\"keccak256\":\"0xce738e48914ed1a16709449645f1f6d44be4f31668eeeff6c9ee89e883c2740f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65574c55ce2c2b4d026116b30a9ac0d0d65408960e321c47599736ce0cd8ce21\",\"dweb:/ipfs/Qmc8XqYzPQ7hZR4BSvuixhka3obPSjNNvyJWhkJuQaLjiT\"]},\"project:/contracts/Sft.sol\":{\"keccak256\":\"0xea58ee8e0104c831358d27d19aa7a06d5eb859240ba4fed2359b303a0f3cea28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19cd1ef15264d79c2b36b21931d40ef478609d174613682d3293416cc1763847\",\"dweb:/ipfs/QmW17csGS8s4Ujsqd1c3fNpV9x6ur9jXZ4FqcE3C9WcjKR\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4471:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:19"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:19",
                "type": ""
              }
            ],
            "src": "14:177:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "266:110:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "321:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "314:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "314:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "314:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "287:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "296:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "283:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "283:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "279:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "279:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "276:52:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:33:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "360:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "347:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "347:23:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "337:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "232:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "243:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "255:6:19",
                "type": ""
              }
            ],
            "src": "196:180:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:125:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "504:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "515:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "500:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "492:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "534:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "549:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "557:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "545:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:74:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "527:74:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "462:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "473:4:19",
                "type": ""
              }
            ],
            "src": "381:226:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "644:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "661:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "664:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "654:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "654:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "758:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:4:19",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "751:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "782:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "785:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "775:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "775:15:19"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "612:184:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "854:725:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "903:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "912:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "915:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "905:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "905:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "905:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "882:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "890:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "878:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "878:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "897:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "874:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "874:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "867:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "867:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "864:55:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "928:30:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "951:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "938:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:20:19"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "932:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "967:28:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "977:18:19",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "971:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1018:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1020:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1020:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1020:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1010:2:19"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1014:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1007:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1007:10:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1004:36:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1049:76:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1059:66:19",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1053:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1134:23:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1154:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1148:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:9:19"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1138:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1166:71:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1188:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1212:2:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1216:4:19",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1208:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1208:13:19"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1223:2:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1204:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1204:22:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1228:2:19",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1200:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1200:31:19"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1233:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1196:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1196:40:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1184:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1184:53:19"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1170:10:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1296:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1298:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1298:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1298:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1255:10:19"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1267:2:19"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1252:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1252:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1275:10:19"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1287:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1272:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1272:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1249:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:46:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1246:72:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1334:2:19",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1338:10:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:22:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1327:22:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1365:6:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1373:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1358:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:18:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1358:18:19"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1424:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1433:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1436:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1426:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1426:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1426:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1399:6:19"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1407:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1395:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1395:15:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1412:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1391:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1391:26:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1419:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1388:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1385:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1466:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1474:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1462:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1462:17:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1485:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1493:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:17:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1500:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1449:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:54:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1449:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1527:6:19"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1535:2:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1523:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1523:15:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1540:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1519:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1519:26:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1547:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1512:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1512:37:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1512:37:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1558:15:19",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1567:6:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1558:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "828:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "836:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "844:5:19",
                "type": ""
              }
            ],
            "src": "801:778:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1664:242:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1710:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1719:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1722:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1712:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1712:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1712:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1685:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1694:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1706:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1677:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1674:52:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1735:37:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1762:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1749:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1749:23:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1739:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1815:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1824:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1827:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1817:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1817:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1817:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1787:6:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1795:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1784:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:30:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1781:50:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1840:60:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:19"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1883:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:22:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1892:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1850:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1850:50:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1840:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1630:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1641:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1653:6:19",
                "type": ""
              }
            ],
            "src": "1584:322:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2018:436:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2064:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2073:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2076:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2066:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2066:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2066:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2039:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2048:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2035:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2060:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2031:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2031:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2028:52:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2089:37:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2116:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2103:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2103:23:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2093:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2135:28:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2145:18:19",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2139:2:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2190:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2199:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2202:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2192:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2192:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2192:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2178:6:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2186:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2175:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:14:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2172:34:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2215:60:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2247:9:19"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2258:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2243:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:22:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2267:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2225:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2225:50:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2215:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2284:48:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2317:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2328:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2313:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2313:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2300:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2300:32:19"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2288:8:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2361:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2370:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2373:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2363:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2363:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2363:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2347:8:19"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2357:2:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2344:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:16:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2341:36:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2386:62:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2418:9:19"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2429:8:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2414:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2414:24:19"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2440:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2396:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2396:52:19"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2386:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1976:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1987:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1999:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2007:6:19",
                "type": ""
              }
            ],
            "src": "1911:543:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2509:481:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2519:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2539:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2533:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2533:12:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2523:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2561:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2566:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2554:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2554:19:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2554:19:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2582:10:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2591:1:19",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2586:1:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2653:110:19",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2667:14:19",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2677:4:19",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2671:2:19",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2709:3:19"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2714:1:19"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2705:3:19"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2705:11:19"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2718:2:19"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2701:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2701:20:19"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2737:5:19"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2744:1:19"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2733:3:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2733:13:19"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2748:2:19"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2729:3:19"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2729:22:19"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2723:5:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2723:29:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2694:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2694:59:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2694:59:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2612:1:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2615:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2609:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2609:13:19"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2623:21:19",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2625:17:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2634:1:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2637:4:19",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2630:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2630:12:19"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2625:1:19"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2605:3:19",
                    "statements": []
                  },
                  "src": "2601:162:19"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2797:62:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2826:3:19"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2831:6:19"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2822:3:19"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2822:16:19"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2840:4:19",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2818:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2818:27:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2847:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2811:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2811:38:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2811:38:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2778:1:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2781:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2775:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2775:13:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2772:87:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2868:116:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2883:3:19"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2896:6:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2904:2:19",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2892:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2892:15:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2909:66:19",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2888:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2888:88:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2879:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2879:98:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2979:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2875:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:109:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2868:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2486:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2493:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2501:3:19",
                "type": ""
              }
            ],
            "src": "2459:531:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3116:99:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3133:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3144:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3126:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3126:21:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3156:53:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3182:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3194:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3205:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3190:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3190:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3164:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3164:45:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3156:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3085:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3096:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3107:4:19",
                "type": ""
              }
            ],
            "src": "2995:220:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3272:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3366:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3369:4:19",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3359:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3359:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3359:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3390:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3393:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3383:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3383:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3383:15:19"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3220:184:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3457:80:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3484:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3486:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3486:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3486:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3473:1:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3480:1:19"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3476:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3476:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3470:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:13:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3467:39:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3515:16:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3526:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3529:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3522:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3515:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3440:1:19",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3443:1:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3449:3:19",
                "type": ""
              }
            ],
            "src": "3409:128:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:76:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3613:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3615:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3615:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3615:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3607:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3610:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3604:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3604:8:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3601:34:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3644:17:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3656:1:19"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3659:1:19"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3652:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3652:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3644:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3573:1:19",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3576:1:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3582:4:19",
                "type": ""
              }
            ],
            "src": "3542:125:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3846:235:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3863:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3874:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3856:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3856:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3856:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3897:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3908:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3893:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3893:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3913:2:19",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3886:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3886:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3886:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3936:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3947:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3932:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3932:18:19"
                      },
                      {
                        "hexValue": "796f752063616e20637265617465206120636f6c6c656374696f6e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3952:34:19",
                        "type": "",
                        "value": "you can create a collection only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3925:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3925:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3925:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4007:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4018:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4003:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4003:18:19"
                      },
                      {
                        "hexValue": "206f6e63652070657220646179",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4023:15:19",
                        "type": "",
                        "value": " once per day"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3996:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3996:43:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3996:43:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4048:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4060:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4071:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4056:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4056:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4048:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3823:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3837:4:19",
                "type": ""
              }
            ],
            "src": "3672:409:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4255:214:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4272:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4283:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4265:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4265:21:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4295:59:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4327:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4339:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4350:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4335:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4335:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4309:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4309:45:19"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4299:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4374:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4385:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4370:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4370:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "4394:6:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4402:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4390:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4390:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4363:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4363:50:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4363:50:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4422:41:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4448:6:19"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4456:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4430:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4430:33:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4422:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4216:9:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4227:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4235:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4246:4:19",
                "type": ""
              }
            ],
            "src": "4086:383:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"you can create a collection only\")\n        mstore(add(headStart, 96), \" once per day\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "99:1767:16:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "99:1767:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:110;1724:10;1684:4;1706:29;;;;;;;;;;;1632:110;;160:25:19;;;148:2;133:18;1632:110:16;;;;;;;;1748:116;;;;;;:::i;:::-;1842:10;1800:7;1825:28;;;:16;:28;;;;;;;;:32;;;;;;;;:28;:32;;1748:116;;;;557:42:19;545:55;;;527:74;;515:2;500:18;1748:116:16;381:226:19;992:634:16;;;;;;:::i;:::-;;:::i;:::-;;290:696;;;;;;:::i;:::-;;:::i;992:634::-;1068:10;1050:17;:29;;;;;;;;;;;:34;;1047:573;;1099:13;1123:3;1115:12;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1158:10:16;1141:28;;;;:16;:28;;;;;;;;1170:29;;;;;;;;1141:59;;;;;;;;:80;;;;:28;:80;;;;;1235:29;;;;;;:34;;1141:80;;-1:-1:-1;1141:16:16;1235:34;;1141:16;;1235:34;:::i;:::-;;;;-1:-1:-1;1047:573:16;;-1:-1:-1;;1047:573:16;;1354:10;1333:32;;;;:20;:32;;;;;;1369:6;;1315:50;;:15;:50;:::i;:::-;:60;;1307:118;;;;;;;3874:2:19;1307:118:16;;;3856:21:19;3913:2;3893:18;;;3886:30;3952:34;3932:18;;;3925:62;4023:15;4003:18;;;3996:43;4056:19;;1307:118:16;;;;;;;;;1439:13;1463:3;1455:12;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1498:10:16;1481:28;;;;:16;:28;;;;;;;;1510:29;;;;;;;;1481:59;;;;;;;;:80;;;;:28;:80;;;;;1575:29;;;;;;:34;;1481:80;;-1:-1:-1;1481:16:16;1575:34;;1481:16;;1575:34;:::i;:::-;;;;-1:-1:-1;;;1047:573:16;992:634;:::o;290:696::-;389:10;371:17;:29;;;;;;;;;;;:34;;368:611;;420:18;454:6;462:4;441:26;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10:16;481:28;;;;:16;:28;;;;;;;;510:29;;;;;;;;481:59;;;;;;;;:80;;;;:28;:80;;;;;575:29;;;;;;:34;;481:80;;-1:-1:-1;481:16:16;575:34;;481:16;;575:34;:::i;:::-;;;;-1:-1:-1;368:611:16;;-1:-1:-1;;368:611:16;;694:10;673:32;;;;:20;:32;;;;;;709:6;;655:50;;:15;:50;:::i;:::-;:60;;647:118;;;;;;;3874:2:19;647:118:16;;;3856:21:19;3913:2;3893:18;;;3886:30;3952:34;3932:18;;;3925:62;4023:15;4003:18;;;3996:43;4056:19;;647:118:16;3672:409:19;647:118:16;779:18;813:6;821:4;800:26;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;857:10:16;840:28;;;;:16;:28;;;;;;;;869:29;;;;;;;;840:59;;;;;;;;:80;;;;:28;:80;;;;;934:29;;;;;;:34;;840:80;;-1:-1:-1;840:16:16;934:34;;840:16;;934:34;:::i;:::-;;;;-1:-1:-1;;;368:611:16;290:696;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:180:19:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:19;;196:180;-1:-1:-1;196:180:19:o;612:184::-;664:77;661:1;654:88;761:4;758:1;751:15;785:4;782:1;775:15;801:778;844:5;897:3;890:4;882:6;878:17;874:27;864:55;;915:1;912;905:12;864:55;951:6;938:20;977:18;1014:2;1010;1007:10;1004:36;;;1020:18;;:::i;:::-;1154:2;1148:9;1216:4;1208:13;;1059:66;1204:22;;;1228:2;1200:31;1196:40;1184:53;;;1252:18;;;1272:22;;;1249:46;1246:72;;;1298:18;;:::i;:::-;1338:10;1334:2;1327:22;1373:2;1365:6;1358:18;1419:3;1412:4;1407:2;1399:6;1395:15;1391:26;1388:35;1385:55;;;1436:1;1433;1426:12;1385:55;1500:2;1493:4;1485:6;1481:17;1474:4;1466:6;1462:17;1449:54;1547:1;1540:4;1535:2;1527:6;1523:15;1519:26;1512:37;1567:6;1558:15;;;;;;801:778;;;;:::o;1584:322::-;1653:6;1706:2;1694:9;1685:7;1681:23;1677:32;1674:52;;;1722:1;1719;1712:12;1674:52;1762:9;1749:23;1795:18;1787:6;1784:30;1781:50;;;1827:1;1824;1817:12;1781:50;1850;1892:7;1883:6;1872:9;1868:22;1850:50;:::i;:::-;1840:60;1584:322;-1:-1:-1;;;;1584:322:19:o;1911:543::-;1999:6;2007;2060:2;2048:9;2039:7;2035:23;2031:32;2028:52;;;2076:1;2073;2066:12;2028:52;2116:9;2103:23;2145:18;2186:2;2178:6;2175:14;2172:34;;;2202:1;2199;2192:12;2172:34;2225:50;2267:7;2258:6;2247:9;2243:22;2225:50;:::i;:::-;2215:60;;2328:2;2317:9;2313:18;2300:32;2284:48;;2357:2;2347:8;2344:16;2341:36;;;2373:1;2370;2363:12;2341:36;;2396:52;2440:7;2429:8;2418:9;2414:24;2396:52;:::i;:::-;2386:62;;;1911:543;;;;;:::o;2459:531::-;2501:3;2539:5;2533:12;2566:6;2561:3;2554:19;2591:1;2601:162;2615:6;2612:1;2609:13;2601:162;;;2677:4;2733:13;;;2729:22;;2723:29;2705:11;;;2701:20;;2694:59;2630:12;2601:162;;;2781:6;2778:1;2775:13;2772:87;;;2847:1;2840:4;2831:6;2826:3;2822:16;2818:27;2811:38;2772:87;-1:-1:-1;2904:2:19;2892:15;2909:66;2888:88;2879:98;;;;2979:4;2875:109;;2459:531;-1:-1:-1;;2459:531:19:o;2995:220::-;3144:2;3133:9;3126:21;3107:4;3164:45;3205:2;3194:9;3190:18;3182:6;3164:45;:::i;:::-;3156:53;2995:220;-1:-1:-1;;;2995:220:19:o;3220:184::-;3272:77;3269:1;3262:88;3369:4;3366:1;3359:15;3393:4;3390:1;3383:15;3409:128;3449:3;3480:1;3476:6;3473:1;3470:13;3467:39;;;3486:18;;:::i;:::-;-1:-1:-1;3522:9:19;;3409:128::o;3542:125::-;3582:4;3610:1;3607;3604:8;3601:34;;;3615:18;;:::i;:::-;-1:-1:-1;3652:9:19;;3542:125::o;4086:383::-;4283:2;4272:9;4265:21;4246:4;4309:45;4350:2;4339:9;4335:18;4327:6;4309:45;:::i;:::-;4402:9;4394:6;4390:22;4385:2;4374:9;4370:18;4363:50;4430:33;4456:6;4448;4430:33;:::i;:::-;4422:41;4086:383;-1:-1:-1;;;;;4086:383:19:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"./Nft.sol\";\nimport \"./Sft.sol\";\n\n\ncontract Factory{\n\n    mapping(address => uint) amountOfContracts;\n    mapping(address => mapping (uint => address)) createdContracts;\n    mapping(address => uint) lastCrationTimestamp;\n\n    function deployNft(string memory symbol, string memory name)external{\n        if(amountOfContracts[msg.sender] == 0){\n            firstNft _contract = new firstNft(symbol, name);\n            createdContracts[msg.sender][amountOfContracts[msg.sender]] = address(_contract);\n            amountOfContracts[msg.sender] += 1;\n        }\n        else{\n            require(block.timestamp - lastCrationTimestamp[msg.sender] >= 1 days, \"you can create a collection only once per day\");\n            firstNft _contract = new firstNft(symbol, name);\n            createdContracts[msg.sender][amountOfContracts[msg.sender]] = address(_contract);\n            amountOfContracts[msg.sender] += 1;\n        }\n\n    }\n\n    function deploySft(string memory uri)external{\n        if(amountOfContracts[msg.sender] == 0){\n            sft _contract = new sft(uri);\n            createdContracts[msg.sender][amountOfContracts[msg.sender]] = address(_contract);\n            amountOfContracts[msg.sender] += 1;\n        }\n        else{\n            require(block.timestamp - lastCrationTimestamp[msg.sender] >= 1 days, \"you can create a collection only once per day\");\n            sft _contract = new sft(uri);\n            createdContracts[msg.sender][amountOfContracts[msg.sender]] = address(_contract);\n            amountOfContracts[msg.sender] += 1;\n        }\n    }\n\n    function getMyContractAmount()external view returns(uint){\n        return amountOfContracts[msg.sender];\n    }\n\n    function getAContract(uint _i)external view returns(address){\n        return createdContracts[msg.sender][_i];\n    }\n}",
  "sourcePath": "/home/amsteradams/developpement/Solidity-Nfts/first-factory/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        2830
      ],
      "Context": [
        2852
      ],
      "Counters": [
        2926
      ],
      "ERC1155": [
        1330
      ],
      "ERC165": [
        3153
      ],
      "ERC721": [
        2374
      ],
      "Factory": [
        3394
      ],
      "IERC1155": [
        1452
      ],
      "IERC1155MetadataURI": [
        1508
      ],
      "IERC1155Receiver": [
        1493
      ],
      "IERC165": [
        3165
      ],
      "IERC721": [
        2490
      ],
      "IERC721Metadata": [
        2535
      ],
      "IERC721Receiver": [
        2508
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        3129
      ],
      "firstNft": [
        3458
      ],
      "sft": [
        3558
      ]
    },
    "id": 3395,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3167,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:16"
      },
      {
        "absolutePath": "project:/contracts/Nft.sol",
        "file": "./Nft.sol",
        "id": 3168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3395,
        "sourceUnit": 3459,
        "src": "57:19:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Sft.sol",
        "file": "./Sft.sol",
        "id": 3169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3395,
        "sourceUnit": 3559,
        "src": "77:19:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          3458,
          3558
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3394,
        "linearizedBaseContracts": [
          3394
        ],
        "name": "Factory",
        "nameLocation": "108:7:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3173,
            "mutability": "mutable",
            "name": "amountOfContracts",
            "nameLocation": "147:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 3394,
            "src": "122:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3172,
              "keyType": {
                "id": 3170,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "130:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "122:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3171,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "141:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3179,
            "mutability": "mutable",
            "name": "createdContracts",
            "nameLocation": "216:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 3394,
            "src": "170:62:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(address => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 3178,
              "keyType": {
                "id": 3174,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "170:45:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(address => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 3177,
                "keyType": {
                  "id": 3175,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "189:25:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 3176,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3183,
            "mutability": "mutable",
            "name": "lastCrationTimestamp",
            "nameLocation": "263:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 3394,
            "src": "238:45:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3182,
              "keyType": {
                "id": 3180,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "238:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3181,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "257:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3276,
              "nodeType": "Block",
              "src": "358:628:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3190,
                        "name": "amountOfContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "371:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3193,
                      "indexExpression": {
                        "expression": {
                          "id": 3191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "389:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "389:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "371:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "404:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "371:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3274,
                    "nodeType": "Block",
                    "src": "633:346:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3230,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "655:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "655:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 3232,
                                    "name": "lastCrationTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3183,
                                    "src": "673:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 3235,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3233,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "694:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "694:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "673:32:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "655:50:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "709:6:16",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              },
                              "src": "655:60:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f752063616e20637265617465206120636f6c6c656374696f6e206f6e6c79206f6e63652070657220646179",
                              "id": 3239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "717:47:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              },
                              "value": "you can create a collection only once per day"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              }
                            ],
                            "id": 3229,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "647:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "647:118:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3241,
                        "nodeType": "ExpressionStatement",
                        "src": "647:118:16"
                      },
                      {
                        "assignments": [
                          3244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3244,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "788:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3274,
                            "src": "779:18:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_firstNft_$3458",
                              "typeString": "contract firstNft"
                            },
                            "typeName": {
                              "id": 3243,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3242,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "779:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "779:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3251,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3248,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "813:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3249,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3187,
                              "src": "821:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "800:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_firstNft_$3458_$",
                              "typeString": "function (string memory,string memory) returns (contract firstNft)"
                            },
                            "typeName": {
                              "id": 3246,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3245,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "804:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "804:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            }
                          },
                          "id": 3250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_firstNft_$3458",
                            "typeString": "contract firstNft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "779:47:16"
                      },
                      {
                        "expression": {
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3252,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "840:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3259,
                              "indexExpression": {
                                "expression": {
                                  "id": 3253,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "857:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "857:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "840:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3260,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3255,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "869:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3258,
                              "indexExpression": {
                                "expression": {
                                  "id": 3256,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "887:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "887:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "869:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "840:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3263,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3244,
                                "src": "910:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              ],
                              "id": 3262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "902:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "902:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "902:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "840:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3266,
                        "nodeType": "ExpressionStatement",
                        "src": "840:80:16"
                      },
                      {
                        "expression": {
                          "id": 3272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3267,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "934:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3270,
                            "indexExpression": {
                              "expression": {
                                "id": 3268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "952:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "952:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "934:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "967:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "934:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3273,
                        "nodeType": "ExpressionStatement",
                        "src": "934:34:16"
                      }
                    ]
                  },
                  "id": 3275,
                  "nodeType": "IfStatement",
                  "src": "368:611:16",
                  "trueBody": {
                    "id": 3228,
                    "nodeType": "Block",
                    "src": "406:214:16",
                    "statements": [
                      {
                        "assignments": [
                          3198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3198,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "429:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3228,
                            "src": "420:18:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_firstNft_$3458",
                              "typeString": "contract firstNft"
                            },
                            "typeName": {
                              "id": 3197,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3196,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "420:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "420:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3205,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3202,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "454:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3203,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3187,
                              "src": "462:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "441:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_firstNft_$3458_$",
                              "typeString": "function (string memory,string memory) returns (contract firstNft)"
                            },
                            "typeName": {
                              "id": 3200,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3199,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "445:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "445:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            }
                          },
                          "id": 3204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "441:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_firstNft_$3458",
                            "typeString": "contract firstNft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "420:47:16"
                      },
                      {
                        "expression": {
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3206,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "481:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3213,
                              "indexExpression": {
                                "expression": {
                                  "id": 3207,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "498:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "498:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "481:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3214,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3209,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "510:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3212,
                              "indexExpression": {
                                "expression": {
                                  "id": 3210,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "528:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "528:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "510:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "481:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3217,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3198,
                                "src": "551:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              ],
                              "id": 3216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "543:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3215,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "543:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "543:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "481:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3220,
                        "nodeType": "ExpressionStatement",
                        "src": "481:80:16"
                      },
                      {
                        "expression": {
                          "id": 3226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3221,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "575:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3224,
                            "indexExpression": {
                              "expression": {
                                "id": 3222,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "593:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "593:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "575:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "608:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "575:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3227,
                        "nodeType": "ExpressionStatement",
                        "src": "575:34:16"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f3990157",
            "id": 3277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployNft",
            "nameLocation": "299:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3185,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "323:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3277,
                  "src": "309:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3187,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "345:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3277,
                  "src": "331:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "308:42:16"
            },
            "returnParameters": {
              "id": 3189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:16"
            },
            "scope": 3394,
            "src": "290:696:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3366,
              "nodeType": "Block",
              "src": "1037:589:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3282,
                        "name": "amountOfContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "1050:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3285,
                      "indexExpression": {
                        "expression": {
                          "id": 3283,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1068:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1068:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1050:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1083:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1050:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3364,
                    "nodeType": "Block",
                    "src": "1293:327:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3321,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "1315:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1315:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 3323,
                                    "name": "lastCrationTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3183,
                                    "src": "1333:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 3326,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3324,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1354:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1354:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1333:32:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1315:50:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1369:6:16",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              },
                              "src": "1315:60:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f752063616e20637265617465206120636f6c6c656374696f6e206f6e6c79206f6e63652070657220646179",
                              "id": 3330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1377:47:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              },
                              "value": "you can create a collection only once per day"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              }
                            ],
                            "id": 3320,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1307:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:118:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3332,
                        "nodeType": "ExpressionStatement",
                        "src": "1307:118:16"
                      },
                      {
                        "assignments": [
                          3335
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3335,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1443:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3364,
                            "src": "1439:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_sft_$3558",
                              "typeString": "contract sft"
                            },
                            "typeName": {
                              "id": 3334,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3333,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1439:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1439:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3341,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3339,
                              "name": "uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3279,
                              "src": "1463:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1455:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_sft_$3558_$",
                              "typeString": "function (string memory) returns (contract sft)"
                            },
                            "typeName": {
                              "id": 3337,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3336,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1459:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1459:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            }
                          },
                          "id": 3340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_sft_$3558",
                            "typeString": "contract sft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1439:28:16"
                      },
                      {
                        "expression": {
                          "id": 3355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3342,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "1481:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3349,
                              "indexExpression": {
                                "expression": {
                                  "id": 3343,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1498:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1498:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1481:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3350,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3345,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "1510:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3348,
                              "indexExpression": {
                                "expression": {
                                  "id": 3346,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1528:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1528:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1510:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1481:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3353,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3335,
                                "src": "1551:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              ],
                              "id": 3352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1543:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3351,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1543:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1543:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1481:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3356,
                        "nodeType": "ExpressionStatement",
                        "src": "1481:80:16"
                      },
                      {
                        "expression": {
                          "id": 3362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3357,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "1575:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3360,
                            "indexExpression": {
                              "expression": {
                                "id": 3358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1593:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1593:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1575:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1608:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1575:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3363,
                        "nodeType": "ExpressionStatement",
                        "src": "1575:34:16"
                      }
                    ]
                  },
                  "id": 3365,
                  "nodeType": "IfStatement",
                  "src": "1047:573:16",
                  "trueBody": {
                    "id": 3319,
                    "nodeType": "Block",
                    "src": "1085:195:16",
                    "statements": [
                      {
                        "assignments": [
                          3290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3290,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1103:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3319,
                            "src": "1099:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_sft_$3558",
                              "typeString": "contract sft"
                            },
                            "typeName": {
                              "id": 3289,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3288,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1099:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1099:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3296,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3294,
                              "name": "uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3279,
                              "src": "1123:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1115:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_sft_$3558_$",
                              "typeString": "function (string memory) returns (contract sft)"
                            },
                            "typeName": {
                              "id": 3292,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3291,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1119:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1119:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            }
                          },
                          "id": 3295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_sft_$3558",
                            "typeString": "contract sft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1099:28:16"
                      },
                      {
                        "expression": {
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3297,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "1141:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3304,
                              "indexExpression": {
                                "expression": {
                                  "id": 3298,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1158:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1158:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1141:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3305,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3300,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "1170:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3303,
                              "indexExpression": {
                                "expression": {
                                  "id": 3301,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1188:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1188:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1170:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1141:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3308,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3290,
                                "src": "1211:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              ],
                              "id": 3307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1203:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3306,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1203:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1203:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1141:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3311,
                        "nodeType": "ExpressionStatement",
                        "src": "1141:80:16"
                      },
                      {
                        "expression": {
                          "id": 3317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3312,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "1235:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3315,
                            "indexExpression": {
                              "expression": {
                                "id": 3313,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1253:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1253:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1235:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1268:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1235:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3318,
                        "nodeType": "ExpressionStatement",
                        "src": "1235:34:16"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9f382d9c",
            "id": 3367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploySft",
            "nameLocation": "1001:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3279,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "1025:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "1011:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3278,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:19:16"
            },
            "returnParameters": {
              "id": 3281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:16"
            },
            "scope": 3394,
            "src": "992:634:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3377,
              "nodeType": "Block",
              "src": "1689:53:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3372,
                      "name": "amountOfContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3173,
                      "src": "1706:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3375,
                    "indexExpression": {
                      "expression": {
                        "id": 3373,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1724:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1724:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1706:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3371,
                  "id": 3376,
                  "nodeType": "Return",
                  "src": "1699:36:16"
                }
              ]
            },
            "functionSelector": "725cd120",
            "id": 3378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyContractAmount",
            "nameLocation": "1641:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1660:2:16"
            },
            "returnParameters": {
              "id": 3371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3378,
                  "src": "1684:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3369,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1683:6:16"
            },
            "scope": 3394,
            "src": "1632:110:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3392,
              "nodeType": "Block",
              "src": "1808:56:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3385,
                        "name": "createdContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "1825:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(uint256 => address))"
                        }
                      },
                      "id": 3388,
                      "indexExpression": {
                        "expression": {
                          "id": 3386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1842:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1842:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1825:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 3390,
                    "indexExpression": {
                      "id": 3389,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3380,
                      "src": "1854:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1825:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3384,
                  "id": 3391,
                  "nodeType": "Return",
                  "src": "1818:39:16"
                }
              ]
            },
            "functionSelector": "74291b06",
            "id": 3393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAContract",
            "nameLocation": "1757:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3380,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "1775:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "1770:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3379,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1769:9:16"
            },
            "returnParameters": {
              "id": 3384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "1800:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1799:9:16"
            },
            "scope": 3394,
            "src": "1748:116:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3395,
        "src": "99:1767:16",
        "usedErrors": []
      }
    ],
    "src": "32:1834:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        2830
      ],
      "Context": [
        2852
      ],
      "Counters": [
        2926
      ],
      "ERC1155": [
        1330
      ],
      "ERC165": [
        3153
      ],
      "ERC721": [
        2374
      ],
      "Factory": [
        3394
      ],
      "IERC1155": [
        1452
      ],
      "IERC1155MetadataURI": [
        1508
      ],
      "IERC1155Receiver": [
        1493
      ],
      "IERC165": [
        3165
      ],
      "IERC721": [
        2490
      ],
      "IERC721Metadata": [
        2535
      ],
      "IERC721Receiver": [
        2508
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        3129
      ],
      "firstNft": [
        3458
      ],
      "sft": [
        3558
      ]
    },
    "id": 3395,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3167,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:16"
      },
      {
        "absolutePath": "project:/contracts/Nft.sol",
        "file": "./Nft.sol",
        "id": 3168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3395,
        "sourceUnit": 3459,
        "src": "57:19:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Sft.sol",
        "file": "./Sft.sol",
        "id": 3169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3395,
        "sourceUnit": 3559,
        "src": "77:19:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          3458,
          3558
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3394,
        "linearizedBaseContracts": [
          3394
        ],
        "name": "Factory",
        "nameLocation": "108:7:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3173,
            "mutability": "mutable",
            "name": "amountOfContracts",
            "nameLocation": "147:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 3394,
            "src": "122:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3172,
              "keyType": {
                "id": 3170,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "130:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "122:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3171,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "141:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3179,
            "mutability": "mutable",
            "name": "createdContracts",
            "nameLocation": "216:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 3394,
            "src": "170:62:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(address => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 3178,
              "keyType": {
                "id": 3174,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "170:45:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(address => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 3177,
                "keyType": {
                  "id": 3175,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "189:25:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 3176,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3183,
            "mutability": "mutable",
            "name": "lastCrationTimestamp",
            "nameLocation": "263:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 3394,
            "src": "238:45:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3182,
              "keyType": {
                "id": 3180,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "238:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3181,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "257:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3276,
              "nodeType": "Block",
              "src": "358:628:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3190,
                        "name": "amountOfContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "371:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3193,
                      "indexExpression": {
                        "expression": {
                          "id": 3191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "389:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "389:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "371:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "404:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "371:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3274,
                    "nodeType": "Block",
                    "src": "633:346:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3230,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "655:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "655:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 3232,
                                    "name": "lastCrationTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3183,
                                    "src": "673:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 3235,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3233,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "694:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "694:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "673:32:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "655:50:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "709:6:16",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              },
                              "src": "655:60:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f752063616e20637265617465206120636f6c6c656374696f6e206f6e6c79206f6e63652070657220646179",
                              "id": 3239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "717:47:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              },
                              "value": "you can create a collection only once per day"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              }
                            ],
                            "id": 3229,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "647:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "647:118:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3241,
                        "nodeType": "ExpressionStatement",
                        "src": "647:118:16"
                      },
                      {
                        "assignments": [
                          3244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3244,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "788:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3274,
                            "src": "779:18:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_firstNft_$3458",
                              "typeString": "contract firstNft"
                            },
                            "typeName": {
                              "id": 3243,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3242,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "779:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "779:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3251,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3248,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "813:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3249,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3187,
                              "src": "821:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "800:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_firstNft_$3458_$",
                              "typeString": "function (string memory,string memory) returns (contract firstNft)"
                            },
                            "typeName": {
                              "id": 3246,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3245,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "804:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "804:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            }
                          },
                          "id": 3250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_firstNft_$3458",
                            "typeString": "contract firstNft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "779:47:16"
                      },
                      {
                        "expression": {
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3252,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "840:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3259,
                              "indexExpression": {
                                "expression": {
                                  "id": 3253,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "857:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "857:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "840:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3260,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3255,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "869:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3258,
                              "indexExpression": {
                                "expression": {
                                  "id": 3256,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "887:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "887:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "869:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "840:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3263,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3244,
                                "src": "910:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              ],
                              "id": 3262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "902:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "902:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "902:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "840:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3266,
                        "nodeType": "ExpressionStatement",
                        "src": "840:80:16"
                      },
                      {
                        "expression": {
                          "id": 3272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3267,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "934:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3270,
                            "indexExpression": {
                              "expression": {
                                "id": 3268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "952:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "952:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "934:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "967:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "934:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3273,
                        "nodeType": "ExpressionStatement",
                        "src": "934:34:16"
                      }
                    ]
                  },
                  "id": 3275,
                  "nodeType": "IfStatement",
                  "src": "368:611:16",
                  "trueBody": {
                    "id": 3228,
                    "nodeType": "Block",
                    "src": "406:214:16",
                    "statements": [
                      {
                        "assignments": [
                          3198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3198,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "429:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3228,
                            "src": "420:18:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_firstNft_$3458",
                              "typeString": "contract firstNft"
                            },
                            "typeName": {
                              "id": 3197,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3196,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "420:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "420:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3205,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3202,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "454:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3203,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3187,
                              "src": "462:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "441:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_firstNft_$3458_$",
                              "typeString": "function (string memory,string memory) returns (contract firstNft)"
                            },
                            "typeName": {
                              "id": 3200,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3199,
                                "name": "firstNft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3458,
                                "src": "445:8:16"
                              },
                              "referencedDeclaration": 3458,
                              "src": "445:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_firstNft_$3458",
                                "typeString": "contract firstNft"
                              }
                            }
                          },
                          "id": 3204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "441:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_firstNft_$3458",
                            "typeString": "contract firstNft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "420:47:16"
                      },
                      {
                        "expression": {
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3206,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "481:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3213,
                              "indexExpression": {
                                "expression": {
                                  "id": 3207,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "498:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "498:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "481:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3214,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3209,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "510:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3212,
                              "indexExpression": {
                                "expression": {
                                  "id": 3210,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "528:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "528:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "510:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "481:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3217,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3198,
                                "src": "551:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_firstNft_$3458",
                                  "typeString": "contract firstNft"
                                }
                              ],
                              "id": 3216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "543:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3215,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "543:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "543:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "481:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3220,
                        "nodeType": "ExpressionStatement",
                        "src": "481:80:16"
                      },
                      {
                        "expression": {
                          "id": 3226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3221,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "575:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3224,
                            "indexExpression": {
                              "expression": {
                                "id": 3222,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "593:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "593:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "575:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "608:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "575:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3227,
                        "nodeType": "ExpressionStatement",
                        "src": "575:34:16"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f3990157",
            "id": 3277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployNft",
            "nameLocation": "299:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3185,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "323:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3277,
                  "src": "309:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3187,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "345:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3277,
                  "src": "331:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "308:42:16"
            },
            "returnParameters": {
              "id": 3189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:16"
            },
            "scope": 3394,
            "src": "290:696:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3366,
              "nodeType": "Block",
              "src": "1037:589:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3282,
                        "name": "amountOfContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "1050:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3285,
                      "indexExpression": {
                        "expression": {
                          "id": 3283,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1068:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1068:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1050:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1083:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1050:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3364,
                    "nodeType": "Block",
                    "src": "1293:327:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3321,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "1315:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1315:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 3323,
                                    "name": "lastCrationTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3183,
                                    "src": "1333:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 3326,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3324,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1354:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1354:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1333:32:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1315:50:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1369:6:16",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              },
                              "src": "1315:60:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f752063616e20637265617465206120636f6c6c656374696f6e206f6e6c79206f6e63652070657220646179",
                              "id": 3330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1377:47:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              },
                              "value": "you can create a collection only once per day"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7e2d191d77fd6d4552c56729424f66f524f0fcc5d8da77514ec83f438a5309fd",
                                "typeString": "literal_string \"you can create a collection only once per day\""
                              }
                            ],
                            "id": 3320,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1307:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:118:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3332,
                        "nodeType": "ExpressionStatement",
                        "src": "1307:118:16"
                      },
                      {
                        "assignments": [
                          3335
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3335,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1443:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3364,
                            "src": "1439:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_sft_$3558",
                              "typeString": "contract sft"
                            },
                            "typeName": {
                              "id": 3334,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3333,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1439:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1439:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3341,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3339,
                              "name": "uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3279,
                              "src": "1463:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1455:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_sft_$3558_$",
                              "typeString": "function (string memory) returns (contract sft)"
                            },
                            "typeName": {
                              "id": 3337,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3336,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1459:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1459:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            }
                          },
                          "id": 3340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_sft_$3558",
                            "typeString": "contract sft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1439:28:16"
                      },
                      {
                        "expression": {
                          "id": 3355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3342,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "1481:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3349,
                              "indexExpression": {
                                "expression": {
                                  "id": 3343,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1498:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1498:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1481:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3350,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3345,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "1510:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3348,
                              "indexExpression": {
                                "expression": {
                                  "id": 3346,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1528:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1528:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1510:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1481:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3353,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3335,
                                "src": "1551:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              ],
                              "id": 3352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1543:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3351,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1543:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1543:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1481:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3356,
                        "nodeType": "ExpressionStatement",
                        "src": "1481:80:16"
                      },
                      {
                        "expression": {
                          "id": 3362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3357,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "1575:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3360,
                            "indexExpression": {
                              "expression": {
                                "id": 3358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1593:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1593:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1575:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1608:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1575:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3363,
                        "nodeType": "ExpressionStatement",
                        "src": "1575:34:16"
                      }
                    ]
                  },
                  "id": 3365,
                  "nodeType": "IfStatement",
                  "src": "1047:573:16",
                  "trueBody": {
                    "id": 3319,
                    "nodeType": "Block",
                    "src": "1085:195:16",
                    "statements": [
                      {
                        "assignments": [
                          3290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3290,
                            "mutability": "mutable",
                            "name": "_contract",
                            "nameLocation": "1103:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3319,
                            "src": "1099:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_sft_$3558",
                              "typeString": "contract sft"
                            },
                            "typeName": {
                              "id": 3289,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3288,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1099:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1099:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3296,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3294,
                              "name": "uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3279,
                              "src": "1123:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1115:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_sft_$3558_$",
                              "typeString": "function (string memory) returns (contract sft)"
                            },
                            "typeName": {
                              "id": 3292,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3291,
                                "name": "sft",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3558,
                                "src": "1119:3:16"
                              },
                              "referencedDeclaration": 3558,
                              "src": "1119:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_sft_$3558",
                                "typeString": "contract sft"
                              }
                            }
                          },
                          "id": 3295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_sft_$3558",
                            "typeString": "contract sft"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1099:28:16"
                      },
                      {
                        "expression": {
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3297,
                                "name": "createdContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "1141:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 3304,
                              "indexExpression": {
                                "expression": {
                                  "id": 3298,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1158:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1158:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1141:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 3305,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3300,
                                "name": "amountOfContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "1170:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3303,
                              "indexExpression": {
                                "expression": {
                                  "id": 3301,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1188:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1188:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1170:29:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1141:59:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3308,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3290,
                                "src": "1211:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_sft_$3558",
                                  "typeString": "contract sft"
                                }
                              ],
                              "id": 3307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1203:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3306,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1203:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1203:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1141:80:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3311,
                        "nodeType": "ExpressionStatement",
                        "src": "1141:80:16"
                      },
                      {
                        "expression": {
                          "id": 3317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3312,
                              "name": "amountOfContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "1235:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3315,
                            "indexExpression": {
                              "expression": {
                                "id": 3313,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1253:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1253:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1235:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1268:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1235:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3318,
                        "nodeType": "ExpressionStatement",
                        "src": "1235:34:16"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9f382d9c",
            "id": 3367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploySft",
            "nameLocation": "1001:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3279,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "1025:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "1011:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3278,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:19:16"
            },
            "returnParameters": {
              "id": 3281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:16"
            },
            "scope": 3394,
            "src": "992:634:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3377,
              "nodeType": "Block",
              "src": "1689:53:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3372,
                      "name": "amountOfContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3173,
                      "src": "1706:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3375,
                    "indexExpression": {
                      "expression": {
                        "id": 3373,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1724:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1724:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1706:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3371,
                  "id": 3376,
                  "nodeType": "Return",
                  "src": "1699:36:16"
                }
              ]
            },
            "functionSelector": "725cd120",
            "id": 3378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyContractAmount",
            "nameLocation": "1641:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1660:2:16"
            },
            "returnParameters": {
              "id": 3371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3378,
                  "src": "1684:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3369,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1683:6:16"
            },
            "scope": 3394,
            "src": "1632:110:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3392,
              "nodeType": "Block",
              "src": "1808:56:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3385,
                        "name": "createdContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "1825:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(uint256 => address))"
                        }
                      },
                      "id": 3388,
                      "indexExpression": {
                        "expression": {
                          "id": 3386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1842:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1842:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1825:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 3390,
                    "indexExpression": {
                      "id": 3389,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3380,
                      "src": "1854:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1825:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3384,
                  "id": 3391,
                  "nodeType": "Return",
                  "src": "1818:39:16"
                }
              ]
            },
            "functionSelector": "74291b06",
            "id": 3393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAContract",
            "nameLocation": "1757:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3380,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "1775:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "1770:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3379,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1769:9:16"
            },
            "returnParameters": {
              "id": 3384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "1800:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1799:9:16"
            },
            "scope": 3394,
            "src": "1748:116:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3395,
        "src": "99:1767:16",
        "usedErrors": []
      }
    ],
    "src": "32:1834:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x624025a3F9699B7B8429216536e5d505BC0f9219",
      "transactionHash": "0x08249ad06750ee6075b731926ae12d52afcdf9f134c5f93ef5e56be46d2f0c61"
    },
    "1652184102903": {
      "events": {},
      "links": {},
      "address": "0xFf71AB84C98789E0d3dC49536dD4760C5F6E61FE",
      "transactionHash": "0x557ff599f478cabdf066c6931725a3878d957700b3bbfa8cdb16984f8ccc08b5"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-10T12:07:21.065Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}